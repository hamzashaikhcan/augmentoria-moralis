{"version":3,"sources":["services/file-upload.service.js","http-common.js","components/image-upload.component.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","headers","file","onUploadProgress","console","log","formData","FormData","append","post","BASE_URL","UploadImages","props","selectFile","bind","upload","state","currentFile","undefined","previewImage","progress","message","event","this","setState","target","files","URL","createObjectURL","UploadService","Math","round","loaded","total","then","response","data","catch","err","className","type","accept","onChange","onClick","role","aria-valuenow","aria-valuemin","aria-valuemax","style","width","src","alt","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAmBe,GCjBAA,IAAMC,OAAO,CAC1BC,QAAS,wBACTC,QAAS,CACP,eAAgB,sBDcL,I,+FAfPC,EAAMC,GACZC,QAAQC,IAAI,mBAAoBH,GAChC,IAAII,EAAW,IAAIC,SAEnBD,EAASE,OAAO,QAASN,GAEzB,OAAOJ,IAAMW,KAAKC,oCAA2BJ,EAAU,CACtDL,QAAS,CACR,eAAgB,uBAEjBE,yB,OEXkBQ,E,kDACpB,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,gBAEd,EAAKE,MAAQ,CACZC,iBAAaC,EACbC,kBAAcD,EACdE,SAAU,EACVC,QAAS,IATQ,E,uDAaRC,GACVC,KAAKC,SAAS,CACbP,YAAaK,EAAMG,OAAOC,MAAM,GAChCP,aAAcQ,IAAIC,gBAAgBN,EAAMG,OAAOC,MAAM,IACrDN,SAAU,EACVC,QAAS,O,+BAID,IAAD,OACRE,KAAKC,SAAS,CACbJ,SAAU,IAGXS,EAAcd,OAAOQ,KAAKP,MAAMC,aAAa,SAACK,GAC7C,EAAKE,SAAS,CACbJ,SAAUU,KAAKC,MAAO,IAAMT,EAAMU,OAAUV,EAAMW,YAGlDC,MAAK,SAACC,GACN,EAAKX,SAAS,CACbH,QAAS,gCAAkCc,EAASC,KAAKA,OAG1DhC,QAAQC,IAAI,cAAe8B,EAASC,KAAKA,SAGzCC,OAAM,SAACC,GACP,EAAKd,SAAS,CACbJ,SAAU,EACVC,QAAS,sCAAwCiB,S,+BAM3C,IAAD,EACiDf,KAAKP,MAAtDC,EADA,EACAA,YAAaE,EADb,EACaA,aAAcC,EAD3B,EAC2BA,SAAUC,EADrC,EACqCA,QAE7C,OACC,gCACC,sBAAKkB,UAAU,MAAf,UACC,qBAAKA,UAAU,QAAf,SACC,uBAAOA,UAAU,sBAAjB,SACC,uBAAOC,KAAK,OAAOC,OAAO,UAAUC,SAAUnB,KAAKV,iBAIrD,qBAAK0B,UAAU,QAAf,SACC,wBAAQA,UAAU,yBAAyBI,QAASpB,KAAKR,OAAzD,yBAMDE,GACA,qBAAKsB,UAAU,gBAAf,SACC,sBACCA,UAAU,sDACVK,KAAK,cACLC,gBAAezB,EACf0B,gBAAc,IACdC,gBAAc,MACdC,MAAO,CAAEC,MAAO7B,EAAW,KAN5B,UAOEA,EAPF,SAYDD,GACA,8BACC,qBAAKoB,UAAU,UAAUW,IAAK/B,EAAcgC,IAAI,OAIjD9B,GACA,qBAAKkB,UAAU,6BAA6BK,KAAK,QAAjD,SACEvB,W,GA3FmC+B,aCe3BC,MAZf,WACC,OACC,sBAAKd,UAAU,YAAf,UACC,+DAEA,qBAAKA,UAAU,UAAf,SACC,cAAC,EAAD,UCAWe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.db104282.chunk.js","sourcesContent":["import http from '../http-common';\nimport axios from 'axios';\n\nclass FileUploadService {\n\tupload(file, onUploadProgress) {\n\t\tconsole.log('CURRENT FILE => ', file);\n\t\tlet formData = new FormData();\n\n\t\tformData.append('image', file);\n\t\tconst BASE_URL = 'http://localhost:9001';\n\t\treturn axios.post(BASE_URL + '/api/images/', formData, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t},\n\t\t\tonUploadProgress,\n\t\t});\n\t}\n}\n\nexport default new FileUploadService();\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import React, { Component } from 'react';\nimport UploadService from '../services/file-upload.service';\n\nexport default class UploadImages extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.selectFile = this.selectFile.bind(this);\n\t\tthis.upload = this.upload.bind(this);\n\n\t\tthis.state = {\n\t\t\tcurrentFile: undefined,\n\t\t\tpreviewImage: undefined,\n\t\t\tprogress: 0,\n\t\t\tmessage: '',\n\t\t};\n\t}\n\n\tselectFile(event) {\n\t\tthis.setState({\n\t\t\tcurrentFile: event.target.files[0],\n\t\t\tpreviewImage: URL.createObjectURL(event.target.files[0]),\n\t\t\tprogress: 0,\n\t\t\tmessage: '',\n\t\t});\n\t}\n\n\tupload() {\n\t\tthis.setState({\n\t\t\tprogress: 0,\n\t\t});\n\n\t\tUploadService.upload(this.state.currentFile, (event) => {\n\t\t\tthis.setState({\n\t\t\t\tprogress: Math.round((100 * event.loaded) / event.total),\n\t\t\t});\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage: 'Image uploded ! Please visit ' + response.data.data,\n\t\t\t\t});\n\n\t\t\t\tconsole.log('MESSAGE => ', response.data.data);\n\t\t\t})\n\n\t\t\t.catch((err) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tprogress: 0,\n\t\t\t\t\tmessage: 'Could not upload the image! due to ' + err,\n\t\t\t\t\t// currentFile: undefined,\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\trender() {\n\t\tconst { currentFile, previewImage, progress, message } = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='col-8'>\n\t\t\t\t\t\t<label className='btn btn-default p-0'>\n\t\t\t\t\t\t\t<input type='file' accept='image/*' onChange={this.selectFile} />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='col-4'>\n\t\t\t\t\t\t<button className='btn btn-success btn-sm' onClick={this.upload}>\n\t\t\t\t\t\t\tUpload\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{currentFile && (\n\t\t\t\t\t<div className='progress my-3'>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='progress-bar progress-bar-info progress-bar-striped'\n\t\t\t\t\t\t\trole='progressbar'\n\t\t\t\t\t\t\taria-valuenow={progress}\n\t\t\t\t\t\t\taria-valuemin='0'\n\t\t\t\t\t\t\taria-valuemax='100'\n\t\t\t\t\t\t\tstyle={{ width: progress + '%' }}>\n\t\t\t\t\t\t\t{progress}%\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t{previewImage && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img className='preview' src={previewImage} alt='' />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t{message && (\n\t\t\t\t\t<div className='alert alert-secondary mt-3' role='alert'>\n\t\t\t\t\t\t{message}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport UploadImages from './components/image-upload.component';\n\nfunction App() {\n\treturn (\n\t\t<div className='container'>\n\t\t\t<h4>React Image Upload to Moralis</h4>\n\n\t\t\t<div className='content'>\n\t\t\t\t<UploadImages />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}